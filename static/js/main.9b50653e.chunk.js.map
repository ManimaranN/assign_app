{"version":3,"sources":["reduxStore/actions/actionTypes.js","reduxStore/actions/taskFormActions.js","apiActions/Axios.js","svg/TrashIcon.js","components/TaskForm.js","apiActions/index.js","utils/dataFormatter.js","svg/SnoozeIcon.js","svg/TickIcon.js","svg/EditIcon.js","components/EachTask.js","svg/EmptyIcon.js","components/Board.js","App.js","reportWebVitals.js","reduxStore/index.js","reduxStore/reducers/taskFormReducer.js","index.js"],"names":["RELOAD_TASK_LIST","FETCH_SELECTED_TASK","SET_IS_EDIT","SET_TASK_FORM_VISIBLITY","handleFetchSelectedTask","data","type","handleSetIsEdit","setTaskFormVisiblity","Axios","axios","create","baseURL","headers","Authorization","validateStatus","status","TrashIcon","xmlns","width","height","viewBox","d","confirmModal","Modal","confirm","mapDispatchToProps","handleReloadTaskList","connect","state","taskFormVisible","taskFormReducer","isEdit","selectedTask","props","Form","useForm","form","useState","isLoading","setisLoading","userOptions","name","user_id","Option","Select","openNotificationWithIcon","title","msg","notification","message","description","handleEditTask","payload","task_id","url","method","updateTask","id","then","response","resetFields","catch","err","finally","handleAddTask","createNewTask","handleDeleteTask","useEffect","rawData","setFieldsValue","console","log","task_msg","task_date","moment","task_time","spinning","onFinish","values","time_zone","currentDate","getTimezoneOffset","getTimezoneOffsetInSeconds","Date","assigned_user","format","diff","startOf","is_completed","layout","className","Item","label","rules","required","disabledDate","current","onChange","value","defaultValue","map","user","onClick","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","htmlType","SnoozeIcon","TickIcon","EditIcon","x","y","enableBackground","version","xmlSpace","Text","Typography","task","shape","src","user_icon","size","UserOutlined","strong","EmptyIcon","fill","stroke","strokeMiterlimit","strokeWidth","reloadTaskList","taskList","settaskList","handleOpenTaskForm","handleFetchTaskList","results","hoverable","length","extra","PlusOutlined","style","Header","Layout","Sider","Content","App","minHeight","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","undefined","action","store","createStore","RootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b50653e.chunk.js","sourcesContent":["export const RELOAD_TASK_LIST = \"RELOAD_TASK_LIST\";\nexport const FETCH_SELECTED_TASK = \"FETCH_SELECTED_TASK\";\nexport const SET_IS_EDIT = \"SET_IS_EDIT\";\nexport const SET_TASK_FORM_VISIBLITY = \"SET_TASK_FORM_VISIBLITY\";\n","import {\n  SET_TASK_FORM_VISIBLITY,\n  RELOAD_TASK_LIST,\n  FETCH_SELECTED_TASK,\n  SET_IS_EDIT,\n} from \"./actionTypes\";\n\nexport const handleReloadTaskList = (data) => {\n  return {\n    type: RELOAD_TASK_LIST,\n    data,\n  };\n};\n\nexport const handleFetchSelectedTask = (data) => {\n  return {\n    type: FETCH_SELECTED_TASK,\n    data,\n  };\n};\n\nexport const handleSetIsEdit = (data) => {\n  return {\n    type: SET_IS_EDIT,\n    data,\n  };\n};\n\nexport const setTaskFormVisiblity = (data) => {\n  return { type: SET_TASK_FORM_VISIBLITY, data };\n};\n","import axios from \"axios\";\nimport { ACCESS_TOKEN } from \"../utils/Constants\";\n\nconst Axios = axios.create({\n  baseURL: `https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598`,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: \"Bearer \" + ACCESS_TOKEN,\n  },\n  validateStatus: (status) => status <= 304,\n});\nexport default Axios;\n\n// Axios.interceptors.request.use(function (config) {\n//   config.headers.Authorization = \"Bearer \" + ACCESS_TOKEN;\n\n//   return config;\n// });\n","import React from \"react\";\n\nconst TrashIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M424 64h-88V48c0-26.467-21.533-48-48-48h-64c-26.467 0-48 21.533-48 48v16H88c-22.056 0-40 17.944-40 40v56c0 8.836 7.164 16 16 16h8.744l13.823 290.283C87.788 491.919 108.848 512 134.512 512h242.976c25.665 0 46.725-20.081 47.945-45.717L439.256 176H448c8.836 0 16-7.164 16-16v-56c0-22.056-17.944-40-40-40zM208 48c0-8.822 7.178-16 16-16h64c8.822 0 16 7.178 16 16v16h-96zM80 104c0-4.411 3.589-8 8-8h336c4.411 0 8 3.589 8 8v40H80zm313.469 360.761A15.98 15.98 0 01377.488 480H134.512a15.98 15.98 0 01-15.981-15.239L104.78 176h302.44z\"></path>\n      <path d=\"M256 448c8.836 0 16-7.164 16-16V224c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16zM336 448c8.836 0 16-7.164 16-16V224c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16zM176 448c8.836 0 16-7.164 16-16V224c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z\"></path>\n    </svg>\n  );\n};\n\nexport default TrashIcon;\n","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport {\n  Form,\n  Input,\n  Button,\n  DatePicker,\n  TimePicker,\n  Select,\n  Modal,\n  Spin,\n  notification,\n} from \"antd\";\nimport { connect } from \"react-redux\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport TrashIcon from \"../svg/TrashIcon\";\n\nimport {\n  setTaskFormVisiblity,\n  handleReloadTaskList,\n  handleSetIsEdit,\n  handleFetchSelectedTask,\n} from \"../reduxStore/actions/taskFormActions\";\nimport { createNewTask, deleteTask, updateTask } from \"../apiActions\";\nimport { formatInitialData } from \"../utils/dataFormatter\";\n\nimport \"./taskForm.css\";\nconst format = \"HH:mm\";\nconst confirmModal = Modal.confirm;\nconst TaskForm = (props) => {\n  const {\n    setTaskFormVisiblity,\n    isEdit,\n    selectedTask,\n    handleReloadTaskList,\n    handleSetIsEdit,\n  } = props;\n  const [form] = Form.useForm();\n\n  const [isLoading, setisLoading] = useState(false);\n\n  const userOptions = [\n    {\n      name: \"Saravanan 23\",\n      user_id: \"user_979f2358c7554c809d0d688943b8966b\",\n    },\n  ];\n\n  function disabledDate(current) {\n    return current && current < moment().startOf(\"day\");\n  }\n\n  const { Option } = Select;\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  const handleCancel = () => {\n    setTaskFormVisiblity(false);\n    handleSetIsEdit(false);\n    handleFetchSelectedTask({});\n    form.resetFields();\n  };\n\n  const openNotificationWithIcon = (type, title, msg) => {\n    notification[type]({\n      message: title,\n      description: msg,\n    });\n  };\n\n  const getTimezoneOffsetInSeconds = (currentDate) => {\n    return -currentDate.getTimezoneOffset() * 60;\n  };\n\n  const handleEditTask = (payload) => {\n    setisLoading(true);\n    updateTask(payload, selectedTask?.id)\n      .then((response) => {\n        if (response?.status === 200) {\n          if (response?.data?.status === \"success\") {\n            openNotificationWithIcon(\n              \"success\",\n              \"Success\",\n              response?.data?.message\n            );\n            handleReloadTaskList();\n            handleSetIsEdit(false);\n            form.resetFields();\n            handleFetchSelectedTask({});\n            setTaskFormVisiblity(false);\n          }\n        }\n        //failure case can be handled here\n      })\n      .catch((err) => {\n        //failure case can be handled here\n      })\n      .finally(() => setisLoading(false));\n  };\n\n  const handleAddTask = (payload) => {\n    setisLoading(true);\n    createNewTask(payload)\n      .then((response) => {\n        if (response?.status === 200) {\n          if (response?.data?.status === \"success\") {\n            openNotificationWithIcon(\n              \"success\",\n              \"Success\",\n              response?.data?.message\n            );\n            handleReloadTaskList();\n            handleSetIsEdit(false);\n            form.resetFields();\n            setTaskFormVisiblity(false);\n          }\n        }\n        //failure case can be handled here\n      })\n      .catch((err) => {\n        //failure case can be handled here\n      })\n      .finally(() => {\n        setisLoading(false);\n      });\n  };\n\n  const handleFinish = (values) => {\n    let currentDate = new Date();\n    let time_zone = getTimezoneOffsetInSeconds(currentDate);\n    const payload = {\n      ...values,\n      assigned_user: \"user_979f2358c7554c809d0d688943b8966b\",\n      task_date: moment(values.task_date).format(`YYYY-MM-DD`),\n      task_time: moment(values.task_time).diff(\n        moment().startOf(\"day\"),\n        \"seconds\"\n      ),\n      time_zone: time_zone,\n      is_completed: 0,\n    };\n\n    console.log(\"add\");\n    isEdit ? handleEditTask(payload) : handleAddTask(payload);\n  };\n\n  const handleDeleteTask = () => {\n    setisLoading(true);\n    deleteTask(selectedTask?.id)\n      .then((response) => {\n        if (response?.status === 200) {\n          if (response?.data?.status === \"success\") {\n            openNotificationWithIcon(\n              \"success\",\n              \"Success\",\n              response?.data?.message\n            );\n            handleReloadTaskList();\n            handleSetIsEdit(false);\n            handleFetchSelectedTask({});\n            setTaskFormVisiblity(false);\n            form.resetFields();\n          }\n        }\n        //failure case can be handled here\n      })\n      .catch((err) => {\n        //failure case can be handled here\n      })\n      .finally(() => {\n        setisLoading(false);\n      });\n  };\n\n  const handleConfirmDelete = () => {\n    confirmModal({\n      title: \"Please confirm\",\n      className: \"manage-category-confirm-modal\",\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to remove this task`,\n      okText: \"Confirm\",\n      cancelText: \"Cancel\",\n      onOk: () => handleDeleteTask(),\n    });\n  };\n  useEffect(() => {\n    if (isEdit && selectedTask) {\n      form.setFieldsValue(formatInitialData(selectedTask));\n    }\n  }, [isEdit, selectedTask, form]);\n\n  return (\n    <Spin spinning={isLoading}>\n      <Form\n        form={form}\n        onFinish={handleFinish}\n        layout=\"vertical\"\n        className=\"task_form_container\"\n      >\n        <Form.Item\n          label=\"Task Description\"\n          name=\"task_msg\"\n          rules={[\n            {\n              required: true,\n              message: \"Description is required!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <div className=\"deadline_field\">\n          <Form.Item\n            label=\"Date\"\n            name=\"task_date\"\n            rules={[\n              {\n                required: true,\n                message: \"Date is required!\",\n              },\n            ]}\n          >\n            <DatePicker disabledDate={disabledDate} onChange={onChange} />\n          </Form.Item>\n          <Form.Item\n            label=\"Time\"\n            name=\"task_time\"\n            rules={[\n              {\n                required: true,\n                message: \"Time is required!\",\n              },\n            ]}\n          >\n            <TimePicker format={format} />\n          </Form.Item>\n        </div>\n\n        <Form.Item name=\"assigned_user\" label=\"Assign User\">\n          <Select defaultValue={\"Saravanan 23\"}>\n            {userOptions?.map((user) => {\n              return (\n                <Option key={user.user_id} value={user.user_id}>\n                  {user.name}\n                </Option>\n              );\n            })}\n          </Select>\n          ,\n        </Form.Item>\n\n        <div className=\"task_form_actions_container\">\n          <div\n            className=\"task_form_actions_container_left\"\n            onClick={() => isEdit && handleConfirmDelete()}\n          >\n            {isEdit && <TrashIcon />}\n          </div>\n          <div className=\"task_form_actions_container_right\">\n            <Form.Item>\n              <Button type=\"text\" onClick={() => handleCancel()}>\n                Cancel\n              </Button>\n            </Form.Item>\n\n            <Form.Item>\n              <Button htmlType=\"submit\" className=\"submit_btn\">\n                Submit\n              </Button>\n            </Form.Item>\n          </div>\n        </div>\n      </Form>\n    </Spin>\n  );\n};\n\nconst mapDispatchToProps = {\n  setTaskFormVisiblity,\n  handleReloadTaskList,\n  handleSetIsEdit,\n  handleFetchSelectedTask,\n};\nconst mapStatesToProps = (state) => {\n  return {\n    taskFormVisible: state.taskFormReducer.taskFormVisible,\n    isEdit: state.taskFormReducer.isEdit,\n    selectedTask: state.taskFormReducer.selectedTask,\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(TaskForm);\n","import Axios from \"./Axios\";\n\nexport const login = () => {\n  const payload = { email: \"smithcheryl@yahoo.com\", password: \"12345678\" };\n\n  return Axios({\n    url: \"https://stage.api.sloovi.com/login\",\n    method: \"POST\",\n    data: payload,\n  });\n};\n\nexport const fetchUserId = () => {\n  return Axios({\n    url: `https://stage.api.sloovi.com/user`,\n    method: \"GET\",\n    data: {},\n  });\n};\n\nexport const fetchTaskList = () => {\n  return Axios({\n    method: \"GET\",\n  });\n};\n\nexport const createNewTask = (payload) => {\n  return Axios({\n    method: \"POST\",\n    data: payload,\n  });\n};\n\nexport const updateTask = (payload, task_id) => {\n  return Axios({\n    url: `/${task_id}`,\n    method: \"PUT\",\n    data: payload,\n  });\n};\n\nexport const deleteTask = (task_id) => {\n  return Axios({\n    url: `https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598/${task_id}`,\n    method: \"DELETE\",\n  });\n};\n","import moment from \"moment\";\nexport const formatInitialData = (rawData) => {\n  console.log(\"raw data :\", rawData);\n\n  let intialData = {\n    task_msg: rawData.task_msg,\n    task_date: moment(rawData.task_date),\n    task_time: moment(rawData.task_time),\n    // assigned_user: rawData.assigned_user,\n  };\n\n  return intialData;\n};\n","import React from \"react\";\n\nconst SnoozeIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M10 24a3.756 3.756 0 003.674-3H6.326A3.756 3.756 0 0010 24zM17.25 13h-4.5a.75.75 0 01-.616-1.176L15.818 6.5H12.75a.75.75 0 010-1.5h4.5a.75.75 0 01.616 1.176L14.182 11.5h3.068a.75.75 0 010 1.5zM23.25 6h-2.5a.75.75 0 01-.61-1.185L21.793 2.5H20.75a.75.75 0 010-1.5h2.5a.75.75 0 01.61 1.185L22.207 4.5h1.043a.75.75 0 010 1.5z\"></path>\n      <path d=\"M19.379 16.913a6.701 6.701 0 01-1.814-2.445c-.104.015-.207.032-.315.032h-4.5a2.242 2.242 0 01-1.994-1.209 2.236 2.236 0 01.146-2.322L12.956 8h-.206c-1.24 0-2.25-1.01-2.25-2.25s1.01-2.25 2.25-2.25h1.561A6.98 6.98 0 0011 2.08V1a1 1 0 10-2 0v1.08C5.613 2.568 3 5.481 3 9v2.788a6.705 6.705 0 01-2.388 5.133A1.752 1.752 0 001.75 20h16.5c.965 0 1.75-.785 1.75-1.75 0-.512-.223-.996-.621-1.337z\"></path>\n    </svg>\n  );\n};\n\nexport default SnoozeIcon;\n","import React from \"react\";\n\nconst TickIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M9.707 19.121a.997.997 0 01-1.414 0l-5.646-5.647a1.5 1.5 0 010-2.121l.707-.707a1.5 1.5 0 012.121 0L9 14.171l9.525-9.525a1.5 1.5 0 012.121 0l.707.707a1.5 1.5 0 010 2.121z\"></path>\n    </svg>\n  );\n};\n\nexport default TickIcon;\n","import React from \"react\";\n\nconst EditIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"15\"\n      height=\"15\"\n      x=\"0\"\n      y=\"0\"\n      enableBackground=\"new 0 0 528.899 528.899\"\n      version=\"1.1\"\n      viewBox=\"0 0 528.899 528.899\"\n      xmlSpace=\"preserve\"\n    >\n      <path d=\"M328.883 89.125l107.59 107.589-272.34 272.34L56.604 361.465l272.279-272.34zm189.23-25.948l-47.981-47.981c-18.543-18.543-48.653-18.543-67.259 0l-45.961 45.961 107.59 107.59 53.611-53.611c14.382-14.383 14.382-37.577 0-51.959zM.3 512.69c-1.958 8.812 5.998 16.708 14.811 14.565l119.891-29.069L27.473 390.597.3 512.69z\"></path>\n    </svg>\n  );\n};\n\nexport default EditIcon;\n","import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { Avatar, Typography } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nimport SnoozeIcon from \"../svg/SnoozeIcon\";\nimport TickIcon from \"../svg/TickIcon\";\nimport EditIcon from \"../svg/EditIcon\";\n\nimport {\n  setTaskFormVisiblity,\n  handleFetchSelectedTask,\n  handleSetIsEdit,\n} from \"../reduxStore/actions/taskFormActions\";\n\nimport \"./eachTask.css\";\nimport TaskForm from \"./TaskForm\";\n\nconst { Text } = Typography;\nconst EachTask = (props) => {\n  const {\n    task,\n    handleFetchSelectedTask,\n    handleSetIsEdit,\n    setTaskFormVisiblity,\n    selectedTask,\n    isEdit,\n  } = props;\n\n  const handleEditTask = (task) => {\n    handleFetchSelectedTask(task);\n    handleSetIsEdit(true);\n    setTaskFormVisiblity(true);\n    console.log(\"edit called\");\n  };\n  return (\n    <Fragment>\n      {selectedTask === task && isEdit ? (\n        <TaskForm />\n      ) : (\n        <div className=\"each_task_container\">\n          <div className=\"eachTask_left_main\">\n            <Avatar\n              shape=\"square\"\n              src={task?.user_icon}\n              size={44}\n              icon={<UserOutlined />}\n            />\n            <div className=\"each_task_left_details\">\n              <Text strong>{task?.task_msg}</Text>\n              <Text>{moment(task?.task_date).format(`DD/MM/YYYY`)}</Text>\n            </div>\n          </div>\n          <div className=\"eachTask_right_main\">\n            <div\n              className=\"eachTask_edit_icon\"\n              onClick={() => handleEditTask(task)}\n            >\n              <EditIcon />\n            </div>\n            <div className=\"eachTask_right_icon_left\">\n              <SnoozeIcon />\n            </div>\n            <div className=\"eachTask_right_icon_right\">\n              <TickIcon />\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setTaskFormVisiblity,\n  handleFetchSelectedTask,\n  handleSetIsEdit,\n};\nconst mapStatesToProps = (state) => {\n  return {\n    taskFormVisible: state.taskFormReducer.taskFormVisible,\n    selectedTask: state.taskFormReducer.selectedTask,\n    isEdit: state.taskFormReducer.isEdit,\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(EachTask);\n","import React from \"react\";\n\nconst EmptyIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"250\"\n      height=\"100\"\n      fill=\"none\"\n      viewBox=\"0 0 324 89\"\n    >\n      <path\n        stroke=\"#999\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"0.5\"\n        d=\"M205 66.7h118.6M0 66.7h118.4\"\n      ></path>\n      <path\n        fill=\"#FFA580\"\n        d=\"M161.8 75.4c-9.1 0-16.5-7.4-16.5-16.5h-18.8v28.2h70.6V58.9h-18.8c0 9.1-7.4 16.5-16.5 16.5z\"\n      ></path>\n      <path\n        fill=\"#455A64\"\n        d=\"M198.2 58.5l-9.4-24.7c-.2-.5-.6-.8-1.1-.8H136c-.5 0-.9.3-1.1.8l-9.4 24.7c0 .1-.1.2-.1.4v28.2c0 .6.5 1.2 1.2 1.2h70.6c.6 0 1.2-.5 1.2-1.2V58.9c-.1-.2-.2-.3-.2-.4zm-61.4-23.1h50.1l8.5 22.3h-17.1c-.6 0-1.2.5-1.2 1.2 0 8.4-6.8 15.3-15.3 15.3-8.4 0-15.3-6.8-15.3-15.3 0-.6-.5-1.2-1.2-1.2h-17.1l8.6-22.3zM195.9 86h-68.2V60.1h16.5c.6 9.3 8.3 16.5 17.6 16.5s17-7.2 17.6-16.5h16.5V86z\"\n      ></path>\n      <path\n        fill=\"#455A64\"\n        d=\"M133.6 81.3h-1.2v-3.5c0-.6-.5-1.2-1.2-1.2-.6 0-1.2.5-1.2 1.2v4.7c0 .6.5 1.2 1.2 1.2h2.4c.6 0 1.2-.5 1.2-1.2s-.6-1.2-1.2-1.2zM140.701 81.3h-2.4c-.6 0-1.2.5-1.2 1.2s.5 1.2 1.2 1.2h2.4c.6 0 1.2-.5 1.2-1.2s-.6-1.2-1.2-1.2zM162.1 6.7c-.3 0-.6-.3-.6-.6V.6c0-.3.3-.6.6-.6s.6.3.6.6v5.5c0 .4-.3.6-.6.6zM154.101 8.9c-.3.2-.6.1-.8-.2l-2.8-4.8c-.2-.3-.1-.6.2-.8.3-.2.6-.1.8.2l2.8 4.8c.2.2.1.6-.2.8zM148.2 14.7c-.2.3-.5.4-.8.2l-4.8-2.8c-.3-.2-.4-.5-.2-.8.2-.3.5-.4.8-.2l4.8 2.8c.3.2.4.5.2.8zM146.1 22.7c0 .3-.3.6-.6.6H140c-.3 0-.6-.3-.6-.6s.3-.6.6-.6h5.5c.3 0 .6.3.6.6zM178 22.7c0-.3.3-.6.6-.6h5.5c.3 0 .6.3.6.6s-.3.6-.6.6h-5.5c-.3 0-.6-.3-.6-.6zM175.9 14.7c-.2-.3-.1-.6.2-.8l4.8-2.8c.3-.2.6-.1.8.2.2.3.1.6-.2.8l-4.8 2.8c-.3.2-.6.1-.8-.2zM170.1 8.9c-.3-.2-.4-.5-.2-.8l2.8-4.8c.2-.3.5-.4.8-.2.3.2.4.5.2.8l-2.8 4.8c-.2.2-.6.3-.8.2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default EmptyIcon;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Card, Typography, Spin } from \"antd\";\n\nimport { setTaskFormVisiblity } from \"../reduxStore/actions/taskFormActions\";\nimport { fetchTaskList } from \"../apiActions\";\n\nimport TaskForm from \"./TaskForm\";\nimport EachTask from \"./EachTask\";\n\nimport \"./board.css\";\nimport EmptyIcon from \"../svg/EmptyIcon\";\n\nconst { Text } = Typography;\nconst Board = (props) => {\n  const {\n    setTaskFormVisiblity,\n    taskFormVisible,\n    reloadTaskList,\n    isEdit,\n  } = props;\n  const [taskList, settaskList] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  const handleOpenTaskForm = () => {\n    setTaskFormVisiblity(true);\n  };\n\n  const handleFetchTaskList = () => {\n    setisLoading(true);\n    fetchTaskList()\n      .then((response) => {\n        if (response?.status === 200) {\n          if (response?.data?.status === \"success\") {\n            console.log(\n              \"response for fetch task List:\",\n              response?.data?.results\n            );\n            settaskList(response?.data?.results);\n          }\n        }\n      })\n      .catch((err) => {\n        //we can handle failure case here\n      })\n      .finally(() => {\n        setisLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaskList();\n  }, [reloadTaskList]);\n\n  return (\n    <div className=\"wrapper_container\">\n      <Card\n        hoverable\n        size=\"small\"\n        title={`Tasks ${taskList?.length}`}\n        extra={\n          <PlusOutlined\n            className=\"add_task_icon\"\n            onClick={() => handleOpenTaskForm()}\n          />\n        }\n        style={{ width: 380 }}\n      >\n        <Spin spinning={isLoading}>\n          {taskList?.length > 0\n            ? taskList?.map((task) => {\n                return <EachTask key={task.id} task={task} />;\n              })\n            : !taskFormVisible && (\n                <div\n                  onClick={() => handleOpenTaskForm()}\n                  className=\"no_data_container\"\n                >\n                  <EmptyIcon />\n                  <Text strong>Add new task</Text>\n                </div>\n              )}\n          {taskFormVisible && !isEdit && <TaskForm />}\n        </Spin>\n      </Card>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = { setTaskFormVisiblity };\nconst mapStatesToProps = (state) => {\n  return {\n    taskFormVisible: state.taskFormReducer.taskFormVisible,\n    reloadTaskList: state.taskFormReducer.reloadTaskList,\n    isEdit: state.taskFormReducer.isEdit,\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(Board);\n","import \"./App.css\";\nimport \"antd/dist/antd.css\";\n\nimport { Layout } from \"antd\";\nimport Board from \"./components/Board\";\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <Layout className=\"app-container\">\n      <Sider width={300} style={{ minHeight: \"100vh\" }}></Sider>\n      <Layout>\n        <Header\n          className=\"navigation_container\"\n          style={{ backgroundColor: \"white\" }}\n        ></Header>\n        <Content className=\"content_container\">\n          <Board />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\n\nimport taskFormReducer from \"./reducers/taskFormReducer\";\n\nexport default combineReducers({ taskFormReducer });\n","import {\n  RELOAD_TASK_LIST,\n  FETCH_SELECTED_TASK,\n  SET_IS_EDIT,\n  SET_TASK_FORM_VISIBLITY,\n} from \"../actions/actionTypes\";\n\nexport default function taskFormReducer(\n  state = {\n    isEdit: false,\n    selectedTask: undefined,\n    reloadTaskList: false,\n    taskFormVisible: false,\n  },\n  action\n) {\n  switch (action.type) {\n    case RELOAD_TASK_LIST:\n      state = { ...state, reloadTaskList: !state.reloadTaskList };\n      break;\n    case FETCH_SELECTED_TASK:\n      state = { ...state, selectedTask: action.data };\n      break;\n\n    case SET_IS_EDIT:\n      state = { ...state, isEdit: action.data };\n      break;\n\n    case SET_TASK_FORM_VISIBLITY:\n      state = { ...state, taskFormVisible: action.data };\n      break;\n\n    default:\n      state = { ...state };\n  }\n  return state;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport RootReducer from \"./reduxStore\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(RootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}